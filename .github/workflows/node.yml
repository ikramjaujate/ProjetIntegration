name: Backend
on:
  push:
    branches:
      - deploiement

jobs:
  test-backend:

    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_DB: ProjetIntegration
          POSTGRES_PASSWORD: '123'
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x
      - name: Run migrations
        run: psql -f ./db/fichier.sql postgresql://postgres:123@localhost:5432/ProjetIntegration
      - name: Installation des d√©pendences de node
        working-directory: ./backend
        run: |
          npm install
      - name: run test
        working-directory: ./backend
        env: 
          DATABASE_HOST: localhost
          DATABASE: ProjetIntegration
          DATABASE_USERNAME: postgres
          DATABASE_PASSWORD: '123'
          DATABASE_PORT: 5432
        run: |
          npm run test
  VPS:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Build application
        working-directory: .
        run: |
          chmod +x build.sh
          ./build.sh
      
      - name: Copy app folder content to remote
        uses: garygrossgarten/github-action-scp@release
        with:
          local: Application
          remote: Application
          host: ${{ secrets.VPS_HOST }}
          port: ${{ secrets.VPS_PORT}}
          username: ${{ secrets.VPS_USER }}
          password: ${{ secrets.VPS_PASSWORD }}
      
      - name: Restart services
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          port: ${{ secrets.VPS_PORT}}
          username: ${{ secrets.VPS_USER }}
          passphrase: ${{ secrets.VPS_PASSWORD }}
          script: |
            cd Application
            docker-compose down && docker-compose up -d