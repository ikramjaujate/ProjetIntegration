[{"C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\index.js":"1","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\App.js":"3","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\Secretary.js":"4","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\Accueil.js":"5","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\PrivateRoute.js":"6","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\auth.js":"7","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\Members.js":"8","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\Navbar.js":"9","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\Grades.js":"10","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\Login.js":"11","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\Modification.js":"12","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\Camera.js":"13","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\File-upload.js":"14","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\OngletCamera.js":"15","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\Input.js":"16","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\ToggleSwitch.js":"17","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\LayoutGrade.js":"18","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\ElementNavbar.js":"19","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\ModalAddGrade.js":"20","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\ModalConfirmationCancel.js":"21","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\ModalModifyGrade.js":"22","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\ModalDetailGrade.js":"23","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\services\\files-upload.service.js":"24","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\Live.js":"25","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\CameraInfo.js":"26","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\TitleModalGrade.js":"27","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\ActionsCameras.js":"28","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\http-common.js":"29","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\GDPR.js":"30","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\ButtonGrade.js":"31","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\Droit_GDPR.js":"32"},{"size":528,"mtime":1637751903768,"results":"33","hashOfConfig":"34"},{"size":375,"mtime":1637751903768,"results":"35","hashOfConfig":"34"},{"size":2766,"mtime":1637767123849,"results":"36","hashOfConfig":"34"},{"size":3033,"mtime":1637751903738,"results":"37","hashOfConfig":"34"},{"size":1887,"mtime":1637751903734,"results":"38","hashOfConfig":"34"},{"size":617,"mtime":1637751903749,"results":"39","hashOfConfig":"34"},{"size":453,"mtime":1637751903760,"results":"40","hashOfConfig":"34"},{"size":8415,"mtime":1637767123857,"results":"41","hashOfConfig":"34"},{"size":1084,"mtime":1637767123859,"results":"42","hashOfConfig":"34"},{"size":16404,"mtime":1637751903736,"results":"43","hashOfConfig":"34"},{"size":2318,"mtime":1637767123854,"results":"44","hashOfConfig":"34"},{"size":14206,"mtime":1637751903747,"results":"45","hashOfConfig":"34"},{"size":5667,"mtime":1637767123865,"results":"46","hashOfConfig":"34"},{"size":4808,"mtime":1637751903743,"results":"47","hashOfConfig":"34"},{"size":1439,"mtime":1637751903748,"results":"48","hashOfConfig":"34"},{"size":538,"mtime":1637751903743,"results":"49","hashOfConfig":"34"},{"size":772,"mtime":1637751903751,"results":"50","hashOfConfig":"34"},{"size":1340,"mtime":1637751903744,"results":"51","hashOfConfig":"34"},{"size":1798,"mtime":1637767123873,"results":"52","hashOfConfig":"34"},{"size":5843,"mtime":1637767123875,"results":"53","hashOfConfig":"34"},{"size":3001,"mtime":1637767123877,"results":"54","hashOfConfig":"34"},{"size":6107,"mtime":1637767123882,"results":"55","hashOfConfig":"34"},{"size":3348,"mtime":1637767123879,"results":"56","hashOfConfig":"34"},{"size":800,"mtime":1637751903769,"results":"57","hashOfConfig":"34"},{"size":1618,"mtime":1637751903744,"results":"58","hashOfConfig":"34"},{"size":827,"mtime":1637767123869,"results":"59","hashOfConfig":"34"},{"size":371,"mtime":1637767123884,"results":"60","hashOfConfig":"34"},{"size":1864,"mtime":1637767123862,"results":"61","hashOfConfig":"34"},{"size":162,"mtime":1637751903767,"results":"62","hashOfConfig":"34"},{"size":203,"mtime":1637773085253,"results":"63","hashOfConfig":"34"},{"size":1263,"mtime":1637767123863,"results":"64","hashOfConfig":"34"},{"size":16397,"mtime":1637772998569,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"1rs2dg5",{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"68"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"68"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"68"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\index.js",[],["142","143"],"C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\App.js",["144"],"import './css/App.css';\r\nimport Members from './Members';\r\nimport Grades from './Grades';\r\nimport Camera  from './components/Camera';\r\nimport './css/App.css';\r\nimport Accueil from './Accueil.js';\r\nimport Secretary from './Secretary.js';\r\nimport {BrowserRouter as Router, Route, Switch, Link} from 'react-router-dom'; \r\nimport Modification from './components/Modification';\r\nimport Login from './Login';\r\nimport {isLoggedIn} from './components/auth.js';\r\nimport {PrivateRoute} from \"./components/PrivateRoute.js\";\r\nimport Navbar from './Navbar';\r\nimport Cam2 from './Accueil.js';\r\nimport GDPR from './GDPR';\r\n\r\nfunction App() {\r\n\r\n  if(isLoggedIn()){\r\n    return(\r\n      <Router>\r\n      <div className=\"App\">\r\n         <Navbar /> \r\n        <div className=\"content\">\r\n          <Switch>\r\n            <PrivateRoute exact isloggedin={isLoggedIn()} component={Grades}  path=\"/grades\"/>\r\n            <PrivateRoute exact isloggedin={isLoggedIn()} component={Camera} path=\"/camera\"/> \r\n            <PrivateRoute exact isloggedin={isLoggedIn()} component={Accueil} path=\"/accueil\"/>\r\n            <PrivateRoute exact isloggedin={isLoggedIn()} component={Secretary} path=\"/secretary\"/>\r\n            <PrivateRoute exact isloggedin={isLoggedIn()} component={Members} path=\"/members\"/>\r\n            <PrivateRoute exact isloggedin={isLoggedIn()} component={Cam2} path=\"/home\"/>\r\n            <PrivateRoute exact isloggedin={isLoggedIn()} component={GDPR} path='/gdpr'/>\r\n            <PrivateRoute exact isloggedin={isLoggedIn()} path=\"/modification\"  component={Modification}/>\r\n            <Route path='/login' exact component={Login}/>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n\r\n    )\r\n  }else{\r\n    return(\r\n      <Router>\r\n      <div className=\"App\">\r\n        <div className=\"content\">\r\n          <Switch>\r\n          <PrivateRoute exact isloggedin={isLoggedIn()} component={Grades}  path=\"/grades\"/>\r\n            <PrivateRoute exact isloggedin={isLoggedIn()} component={Camera} path=\"/camera\"/> \r\n            <PrivateRoute exact isloggedin={isLoggedIn()} component={Accueil} path=\"/accueil\"/>\r\n            <PrivateRoute exact isloggedin={isLoggedIn()} component={Secretary} path=\"/secretary\"/>\r\n            <PrivateRoute exact isloggedin={isLoggedIn()} component={Members} path=\"/members\"/>\r\n            <PrivateRoute exact isloggedin={isLoggedIn()} component={Cam2} path=\"/home\"/>\r\n            <PrivateRoute exact isloggedin={isLoggedIn()} component={GDPR} path='/gdpr'/>\r\n            <PrivateRoute exact isloggedin={isLoggedIn()} path=\"/modification\"  component={Modification}/>\r\n            <Route path='/login' exact component={Login}/>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n\r\n    )}\r\n    \r\n}\r\n\r\n\r\nexport default App;\r\n","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\Secretary.js",[],"C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\Accueil.js",["145","146","147","148","149"],"import { useEffect, useState } from 'react';\r\nimport CadreCameras from './components/OngletCamera.js'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './css/Accueil.css'\r\nimport React from 'react';\r\n\r\n\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport'bootstrap/dist/css/bootstrap.min.css';\r\nimport'bootstrap/dist/js/bootstrap.min.js';\r\nimport'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\nimport { Popover, Toast, Tooltip } from 'bootstrap/dist/js/bootstrap.esm.min.js' ;\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n\r\nfunction Cam2 (){\r\n    const[etatCam, setEtatCam] = useState(null)\r\n\r\n    useEffect(()=>{\r\n      \r\n        //Get qui va chercher toutes les caméras et leur état \r\n        var etatCamera = {method : 'GET',\r\n              headers:{'Content-type':'application/json'}\r\n              }\r\n        \r\n              fetch('/api/camera', etatCamera)\r\n              .then(response =>{\r\n                console.log(response)\r\n                  return response.json()\r\n              })\r\n              .then(json =>{               \r\n                  setEtatCam(json)\r\n              })   \r\n      }, [])\r\n\r\n      \r\n\r\n    return (\r\n        \r\n        <div className=\"cam2\">\r\n        \r\n        \r\n        <div className='titre offset-lg-5 offset-md-4 offset-sm-4 offset-2'>Page de gestion des caméras</div>\r\n        \r\n        <div class=\"container\"> \r\n         <div className='row'>\r\n        {etatCam&&etatCam.map(camera=> \r\n          <div>\r\n            <CadreCameras nomCam={camera.name_camera} statusCam={camera.id_status} idCam={camera.id_camera} nomStatus={camera.name_status}/>\r\n          </div>\r\n        )} \r\n        \r\n        </div>  \r\n        </div>\r\n  \r\n  </div>\r\n\r\n\r\n    )\r\n}\r\nexport default Cam2;","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\PrivateRoute.js",["150","151"],"import React from 'react';\r\nimport { Redirect, Route } from \"react-router-dom\";\r\nimport {useEffect, useState} from \"react\" ;\r\nimport {isLoggedIn} from './auth.js';\r\n\r\nexport const PrivateRoute = ({component: Component, ...rest}) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            isLoggedIn() ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/login\",\r\n                        state: {from: props.location}\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    />\r\n);","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\auth.js",[],"C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\Members.js",["152","153"],"import 'bootstrap/dist/css/bootstrap.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.min.js';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport React, { useState, useEffect } from 'react';\r\nimport Popup from 'reactjs-popup';\r\nimport 'reactjs-popup/dist/index.css';\r\nimport UploadFiles from './components/File-upload.js';\r\nimport Input from './components/Input';\r\nimport Axios from 'axios';\r\n\r\nexport default function Members() {\r\n\r\n    \r\n\r\n    Axios.defaults.withCredentials = true;\r\n    const [clientFirstName, setClientFirstName] = useState(\"\");\r\n    const [clientLastName, setClientLastName] = useState(\"\");\r\n    const [clientGrade, setClientGrade] = useState(1);\r\n    const [gradesList, setGradesList] = useState([]);\r\n    const [membersList, setMembersList] = useState([]);\r\n    const [currentMember, setCurrentMember] = useState(\"\");\r\n    const [filterText, setFilterText] = useState(\"\");\r\n    const [currentGrade, setCurrentGrade] = useState(\"Tous\")\r\n\r\n    useEffect(()=> {\r\n        getGrade() ;\r\n        getMembers();\r\n\t}, []);\r\n\r\n    const getMembers = () => {\r\n\t\tlet informations = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' }, \r\n        };\r\n        fetch(`/api/members`, informations)\r\n            .then(response => {\r\n\t\t\t\treturn response.json()\r\n\t\t\t}).then(response => {\r\n                setMembersList(response)\r\n            })\r\n\t}\r\n\r\n    const submitClient = () => {\r\n        Axios.put(`http://localhost:3001/api/client`, {\r\n            FirstName : clientFirstName,\r\n            LastName : clientLastName,\r\n            Grade : clientGrade\r\n        }).then ((response) => {\r\n            if (response){\r\n                window.alert(\"Client déjà enregistré\")\r\n            }\r\n        })\r\n    }\r\n\r\n    const delMember = (id) => {\r\n        const idMember = id;\r\n        Axios.delete(`http://localhost:3001/api/members/${idMember}`).then((response)=> {\r\n            if(response) {\r\n                window.location.reload();\r\n            }\r\n        })\r\n    }\r\n\r\n    const setCurrent = (id) => {\r\n        setCurrentMember(id)   \r\n             \r\n    }\r\n\r\n    const getGrade = () => {\r\n        Axios.get(`http://localhost:3001/api/gradesInfos`).then((response)=> {\r\n            setGradesList(response.data)\r\n        }).then( () => {\r\n        })\r\n    }    \r\n   \r\n    return (\r\n        <>\r\n\r\n            <div  className=\"rounded row mt-2 justify-content-center\"> \r\n                <div className=\"col-4\">\r\n                    <input style={{border:'1px solid grey'}} type=\"text\" onChange={e => {\r\n                        setFilterText(e.target.value)\r\n                    }}placeholder=\"chercher\"></input>\r\n                </div>\r\n                <select onChange={e => (setCurrentGrade(e.target.value))} style={{width:\"20%\"}} className=\"form-select form-select-sm\" aria-label=\"Default select example\">\r\n                    <option>Tous</option>\r\n                    {gradesList.map((val) => {\r\n                            return (<option >{val.name_grade}</option>)\r\n                    })}\r\n                </select>                \r\n            </div>\r\n            <div> \r\n                <div className=\"row offset-1 justify-content-center\">\r\n                    <Popup trigger={ <button style={{backgroundColor:'#c6e5c3', border:\"1px solid lightgrey\"}} className=\"rounded col-sm-3 col-lg-3 mt-4 mb-5\">Ajouter utilisateur (+)</button>} position=\"center\" modal nested>\r\n                        <h1>Nouvel utilisateur:</h1>\r\n                        <form onSubmit={submitClient}>\r\n                            <label for=\"f-name\">Prénom:</label><br/>\r\n                            <Input name=\"f-name\" idName=\"f-name\" max=\"50\" min=\"1\" type=\"texte\" placeholder=\"Prénom\" setFunc={setClientFirstName}/><br/>\r\n                            <label for=\"l-name\">Nom:</label><br/>\r\n                            <Input name=\"l-name\" idName=\"l-name\" max=\"50\" min=\"1\" type=\"texte\" placeholder=\"Nom\" setFunc={setClientLastName}/><br/>\r\n                            <label for=\"grade\">Grade:</label><br/>\r\n                            <select required onChange={(e) => {\r\n                                            setClientGrade(e.target.value)}} name=\"grade\">\r\n                                {gradesList.map((val) => {\r\n                                        return <option value={val.id_grade}>{val.id_grade + \". \"}{val.name_grade}</option>\r\n                                })}\r\n                            </select><br/><br/>\r\n                            <button type=\"submit\">Envoyer</button>\r\n                            <UploadFiles/>                        \r\n                        </form>\r\n                    </Popup>\r\n    \r\n                    {membersList.filter(name => name.first_name.includes(filterText)).filter(currentGrade !== \"Tous\" ? grade => grade.name_grade === currentGrade : grade => grade.name_grade.includes(\"\")).map((val) => {\r\n                        return (\r\n                            <div className=\"rounded col-sm-5 col-lg-3 p-4 mx-1 mb-3 \" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\r\n                                <div className=\"row rounded\">\r\n                                    <div style={{backgroundColor:val.color, fontSize:\"0.7rem\"}} className=\"col-6\">\r\n                                        {val.name_grade}\r\n                                        \r\n                                    </div>\r\n                                    <div style={{backgroundColor:val.color}} className=\"col-6\">\r\n                                    <button className=\"p-2 btn-close btn-close-grey float-end\" id={val.id_member} onClick={event => {if(window.confirm(\"Voulez vous vraiment supprimer \" + val.last_name + \"?\")) delMember(event.target.id)}} ></button>\r\n                                    </div>                                    \r\n                                    <div style={{backgroundColor:\"#ebebeb\"}} className=\"rounded col-12\">\r\n\r\n                                        <div class=\"col-md-4 text-align\">\r\n                                            <img src=\"https://as2.ftcdn.net/v2/jpg/03/32/59/65/1000_F_332596535_lAdLhf6KzbW6PWXBWeIFTovTii1drkbT.jpg\" class=\"img-fluid rounded-start\" alt=\"profile-pic\"/>\r\n                                        </div>\r\n                                        {val.first_name} {val.last_name}\r\n                                        \r\n                                        \r\n                                        {/* <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                                            <div class=\"modal-dialog\">\r\n                                                <div class=\"modal-content\">\r\n                                                <div class=\"modal-header\">\r\n                                                    <h5 class=\"modal-title\" id=\"exampleModalLabel\">{val.name_grade}</h5>\r\n                                                    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                                                </div>\r\n                                                <div class=\"modal-body\">\r\n                                                    {val.first_name} {val.last_name}\r\n                                                </div>\r\n                                                <div class=\"modal-footer\">\r\n                                                    <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n                                                    <button type=\"button\" class=\"btn btn-primary\">Save changes</button>\r\n                                                </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div> */}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                        )\r\n                    })}              \r\n\r\n            \r\n                       \r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\Navbar.js",[],"C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\Grades.js",["154","155"],"import 'bootstrap/dist/js/bootstrap.bundle.min.js';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport'bootstrap/dist/css/bootstrap.min.css';\r\nimport'bootstrap/dist/js/bootstrap.min.js';\r\nimport'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\nimport { Popover, Toast, Tooltip } from 'bootstrap/dist/js/bootstrap.esm.min.js' ;\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nimport './css/Grades.css';\r\nimport LayoutGrade from './components/LayoutGrade';\r\nimport {useEffect, useState} from \"react\" ;\r\nimport ModalAddGrade from './components/ModalAddGrade';\r\nimport ModalModifyGrade from './components/ModalModifyGrade';\r\nimport ModalConfirmationCancel from './components/ModalConfirmationCancel';\r\nimport ModalDetailGrade from './components/ModalDetailGrade';\r\n\r\n\r\nfunction Grades() {\r\n\r\n    const [informationsGrade, setInformationsGrade] = useState([]);\r\n    const [informationsCameras, setinformationsCameras] = useState(null);\r\n    const [colorGrades, setColorGrades] = useState([]);\r\n    const [currentColor, setCurrentColor] = useState(\"\");\r\n    const [currentGrade, setCurrentGrade] = useState(\"\");\r\n    const [currentIdGrade, setCurrentIdGrade] = useState(\"\");\r\n    \r\n    const [finalColor, setFinalColor] = useState(\"var(--empty-color)\");\r\n    const [finalIdColor, setFinalIdColor] = useState(\"empty\");\r\n    const [textErrorName, setTextErrorName] = useState(\"\");\r\n    const [textErrorColor, setTextErrorColor] = useState(\"\");\r\n    const [textNewNameGrade, setTextNewNameGrade] = useState(\"\");\r\n    const [borderNewNameGrade, setBorderNewNameGrade] = useState(\"null\");\r\n    const [titleModalDetails, setTitleModalDetails] = useState(\"Chargement\");\r\n    const [colorModalDetails, setColorModalDetails] = useState(\"var(--text-loading)\");\r\n    //const [cc, setCC] = useState(0) ;\r\n    let actionsModify = 0 ;\r\n    let notificationsModify = 0 ;\r\n    //const [notificationsModify, setNotificationsModify] = useState(0) ;\r\n\r\n    const optionsToast = {\r\n        autoClose: 8000,\r\n        position: \"top-right\",\r\n        hideProgressBar: false,\r\n        closeOnClick: true,\r\n        pauseOnHover: true,\r\n        draggable: true, \r\n        theme:\"colored\"\r\n    };\r\n    const errorMsgClient = \"Une erreur s'est produite. Veuillez réessayer. Si l'erreur persite, contactez-nous.\" ;\r\n\r\n    let newActions = {} ;\r\n    let newNotifications = {} ;\r\n\r\n\r\n    /**\r\n     * Initializes the Bootstrap elements necessary for the design of the page;\r\n     * PopOver - Toast\r\n     * \r\n     * @author Clémentine Sacré <c.sacre@students.ephec.be>\r\n     */\r\n     useEffect(()=> {\r\n        Array.from(document.querySelectorAll('button[data-bs-toggle=\"popover\"]'))\r\n        .forEach(popoverNode => new Popover(popoverNode)) ;\r\n        Array.from(document.querySelectorAll('.toast'))\r\n        .forEach(toastNode => new Toast(toastNode));\r\n        Array.from(document.querySelectorAll('button[data-bs-toggle=\"tooltip\"]'))\r\n        .forEach(tooltipNode => new Tooltip(tooltipNode))\r\n\t}, []);\r\n\r\n\r\n    /**\r\n     * Retrieves at page load the information concerning the different grades, as well \r\n     * as the different existing colors for the creation/modification of grade\r\n     * \r\n     * @author Clémentine Sacré <c.sacre@students.ephec.be>\r\n     */\r\n    useEffect(()=> {\r\n        getGrades() ;\r\n        getColor() ;\r\n\t}, []);\r\n\r\n\r\n    /**\r\n     * Get information about the different grades\r\n     * \r\n     * @author Clémentine Sacré <c.sacre@students.ephec.be>\r\n     */\r\n    const getGrades = () => {\r\n        let informations = { method: 'GET',\r\n               headers: {'Content-Type': 'application/json'},\r\n        };\r\n        fetch(`/api/grades`, informations)\r\n        .then(result => {\r\n            return result.json();\r\n        })\r\n        .then(dataCamera => {\r\n            fetch(`/api/grades/members`, informations)\r\n            .then(result => {\r\n                return result.json();\r\n            })\r\n            .then(dataMembers => {\r\n                //dataCamera.map(grade => grade.members = data)\r\n                dataCamera.map(grade => grade.members = dataMembers.filter(gradeMembers =>gradeMembers.id_grade === grade.id_grade)[0].members) ;\r\n                setInformationsGrade(dataCamera) ;\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get the different existing colors for grade creation/modification\r\n     * \r\n     * @author Clémentine Sacré <c.sacre@students.ephec.be>\r\n     */\r\n    const getColor = () => {\r\n        let informations = { method: 'GET',\r\n               headers: {'Content-Type': 'application/json'},\r\n        };\r\n        fetch(`/api/grades/colors`, informations)\r\n        .then(result => {\r\n            return result.json();\r\n        })\r\n        .then(data => {\r\n            setColorGrades(data);\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * Assigns a color to the grade that is being created\r\n     * \r\n     * @author Clémentine Sacré <c.sacre@students.ephec.be>\r\n     * @param {string} newColor  Couleur sélectionnée pour le grade\r\n     */\r\n    const chooseColor = (idColor, newColor) => {\r\n        setFinalColor(newColor);\r\n        setFinalIdColor(idColor);\r\n    }\r\n\r\n\r\n    /**\r\n     * Suppression of error messages at the creation of a grade\r\n     * \r\n     * @author Clémentine Sacré <c.sacre@students.ephec.be>\r\n     */\r\n     const deleteErrorMsg = (nameError, colorError) => {\r\n        if (nameError) {\r\n            setBorderNewNameGrade(\"1px solid #ced4da\");\r\n            setTextErrorName(\"\");\r\n        }\r\n        if (colorError) {\r\n            setTextErrorColor(\"\");\r\n            let styleElem = document.head.appendChild(document.createElement(\"style\"));\r\n            styleElem.innerHTML = \"#empty:before {border:none}\";\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Reset of the information specified for the creation of a grade\r\n     * \r\n     * @author Clémentine Sacré <c.sacre@students.ephec.be>\r\n     */\r\n     const resetCreation = () => {\r\n        deleteErrorMsg(true, true) ;\r\n        chooseColor(\"empty\", \"var(--empty-color)\")\r\n        setTextNewNameGrade(\"\");\r\n    }\r\n\r\n    /**\r\n     * Adapt the name and color of the modal for the grade on which you want to have details\r\n     * \r\n     * @author Clémentine Sacré <c.sacre@students.ephec.be>\r\n     * @param {string} mainColor  Color of the selected grade\r\n     * @param {string} mainName   Name of the selected grade\r\n     * @param {integer} grade     Identifier of the selected grade\r\n     */\r\n    const openCameraInfo = (mainColor, mainName, grade) => {\r\n        setColorModalDetails(mainColor);\r\n        setTitleModalDetails(mainName);\r\n\r\n        setCurrentColor(mainColor);\r\n        setCurrentGrade(mainName);\r\n        setCurrentIdGrade(grade);\r\n\r\n        let informations = { method: 'GET',\r\n               headers: {'Content-Type': 'application/json'},\r\n        };\r\n\r\n        fetch(`/api/grades/${grade}/cameras`, informations)\r\n        .then(result => {\r\n            return result.json();\r\n        })\r\n        .then(dataCameras => {\r\n            setinformationsCameras(dataCameras) ;\r\n        });\r\n    }\r\n\r\n\r\n    /**\r\n     * Create a new grade, checking beforehand that the information requested is complete\r\n     * \r\n     * @author Clémentine Sacré <c.sacre@students.ephec.be>\r\n     */\r\n     const createGrade = () => {\r\n        let newName = textNewNameGrade ;\r\n        let newColor = finalIdColor ;\r\n        let newNameok = false, newColorok = false ;\r\n        if (newName === \"\") {\r\n            setBorderNewNameGrade(\"1px solid var(--error)\");\r\n            setTextErrorName(\"Veuillez choisir un nom\");\r\n        }\r\n        else if (informationsGrade.map(element => element.name_grade).indexOf(newName) !== -1) {\r\n            setBorderNewNameGrade(\"1px solid var(--error)\");\r\n            setTextErrorName(\"Ce nom existe déjà\");\r\n        }\r\n        else {\r\n            deleteErrorMsg(true, false);\r\n            newNameok = true ;\r\n        }\r\n        \r\n        if (newColor === \"empty\") {\r\n            setTextErrorColor(\"Veuillez choisir une couleur\");\r\n            let styleElem = document.head.appendChild(document.createElement(\"style\"));\r\n            styleElem.innerHTML = \"#empty:before {border:1px solid red}\";\r\n        }\r\n        else {\r\n            deleteErrorMsg(false, true);\r\n            newColorok = true ;\r\n        }\r\n\r\n        if (newColorok && newNameok) {\r\n            deleteErrorMsg(true, true) ;\r\n\r\n            fetch (\"/api/grades\",{\r\n                method: \"PUT\",\r\n                headers:{\r\n                    \"Content-type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({name:newName, idcolor:newColor})\r\n            })\r\n            .then((res)=> {\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                resetCreation() ;\r\n                document.getElementById(\"cancel-creation\").click() ;\r\n                if (data.message === \"ok\") {\r\n                    getGrades() ;\r\n                    getColor() ;\r\n                    toast.success(\"Vous venez de créer le grade \" + newName + \" !\", optionsToast);\r\n                }\r\n                else {\r\n                    toast.error(errorMsgClient, optionsToast);\r\n                }\r\n            });    \r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Activate the button that allows you to close your modal\r\n     * \r\n     * @author Clémentine Sacré <c.sacre@students.ephec.be>\r\n     * @param {string} idButton  Identifier of the button to be activated\r\n     */\r\n     const activateButton = (idButton) => {\r\n        document.getElementById(idButton).click() ;\r\n    }\r\n\r\n\r\n    /**\r\n     * Verify if all the fetch api have been done, for the modification\r\n     * of the access and the notification for a grade.\r\n     * \r\n     * @author Clémentine Sacré <c.sacre@students.ephec.be>\r\n     */\r\n    const verifyActions = () => {\r\n        if ((actionsModify === Object.keys(newActions).length) && (notificationsModify === Object.keys(newNotifications).length)) {\r\n            actionsModify = 0 ;\r\n            notificationsModify = 0 ;\r\n            \r\n            activateButton(\"close-modify\"); //à voir si on ferme le modal quand c'est ok ou si on renvoie qqpart\r\n            newActions = {} ;\r\n            newNotifications = {} ;\r\n            getGrades() ;\r\n            openCameraInfo(currentColor,currentGrade,currentIdGrade) ;\r\n            toast.success(\"Vous venez de modifier les actions des caméras du grade \" + currentGrade + \" !\", optionsToast);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Save new camera action and new presence/absence of notification for a grade\r\n     * \r\n     * @author Clémentine Sacré <c.sacre@students.ephec.be>\r\n     */\r\n     const saveAction = () => {     \r\n        for (let camera in newActions) {\r\n            let informations = { method: 'POST',\r\n               headers: {'Content-Type': 'application/json'},\r\n               body: JSON.stringify({camera: camera, action : newActions[camera]})\r\n            };\r\n\r\n            fetch(`/api/grades/${currentIdGrade}/action`, informations)\r\n            .then(result => {\r\n                return result.json();\r\n            })\r\n            .then(data => {\r\n                if (data.count === 1) {\r\n                    actionsModify++ ;\r\n                    verifyActions() ;\r\n                }\r\n                else {\r\n                    toast.error(errorMsgClient, optionsToast);\r\n                }\r\n            });\r\n        }\r\n\r\n        for (let camera in newNotifications) {\r\n            let informations = { method: 'POST',\r\n               headers: {'Content-Type': 'application/json'},\r\n               body: JSON.stringify({camera: camera, notification : newNotifications[camera]})\r\n            };\r\n\r\n            fetch(`/api/grades/${currentIdGrade}/notification`, informations)\r\n            .then(result => {\r\n                return result.json();\r\n            })\r\n            .then(data => {\r\n                if (data.count === 1) {\r\n                    notificationsModify++ ;\r\n                    verifyActions() ;\r\n                }\r\n                else {\r\n                    toast.error(errorMsgClient, optionsToast);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Update the action's camera when opening the modify modal\r\n     * \r\n     * @author Clémentine Sacré <c.sacre@students.ephec.be>\r\n     */\r\n    const resetModal = () => {\r\n        for (let camera in informationsCameras) {\r\n            if (informationsCameras[camera].id_camera in newActions) {\r\n                document.getElementsByClassName(\"action-\" + currentIdGrade+\"-\" + informationsCameras[camera].id_camera)[0].checked = newActions[camera];\r\n            }\r\n            else {document.getElementsByClassName(\"action-\" + currentIdGrade+\"-\" + informationsCameras[camera].id_camera)[0].checked = informationsCameras[camera].allowed;}\r\n            if (informationsCameras[camera].id_camera in newNotifications) {\r\n                document.getElementById(\"notification-\" + currentIdGrade + \"-\" + informationsCameras[camera].id_camera).className = newNotifications[camera] ? \"bi bi-bell-fill\" : \"bi bi-bell-slash-fill\";\r\n            }\r\n            else {document.getElementById(\"notification-\" + currentIdGrade + \"-\" + informationsCameras[camera].id_camera).className = informationsCameras[camera].notification ? \"bi bi-bell-fill\" : \"bi bi-bell-slash-fill\";}\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * Don't save the modifications that have been made on the actions and notification\r\n     * of camera\r\n     * \r\n     * @author Clémentine Sacré <c.sacre@students.ephec.be>\r\n     */\r\n    const deleteModification = () => {\r\n        activateButton(\"close-cancel\");\r\n        activateButton(\"open-desc-grade-2\");\r\n        newActions = {} ;\r\n        newNotifications = {} ;\r\n    }\r\n\r\n    \r\n    return (\r\n        <div>\r\n            <div className=\"row justify-content-center\">\r\n                <div id=\"desription-page\" className=\"row col-11 col-sm-10 col-md-9 col-lg-7\">\r\n                    <div id=\"title-description\" className=\"col-12\">Grades</div>\r\n                    <div id=\"description\" className=\"col-12\">\r\n                        Cette page vous permet de créer des grades, <br /> ainsi que de voir les détails de ces <br /> derniers !\r\n                    </div>\r\n                </div>\r\n\r\n                {informationsGrade && informationsGrade.map(grade => (\r\n                    <div className=\"col-12\" onClick={() => openCameraInfo(grade.color, grade.name_grade, grade.id_grade)}>\r\n                        <LayoutGrade key={`prop-${grade.id_grade}`} name={grade.name_grade} color={grade.color} members={grade.members} \r\n                            allowed_camera={grade.allowedcamera} refused_camera={grade.refusedcamera}/>\r\n                    </div>\r\n                ))}\r\n\r\n                <div id=\"layout-add\" className=\"row p-1 text-center justify-content-center col-12\">\r\n                    <span title=\"Créer un grade\" data-toggle=\"tooltip\" data-placement=\"top\">\r\n                        <i type=\"button\" className=\"p-0 bi bi-plus-circle-fill add-user col-1\" data-bs-toggle=\"modal\" data-bs-target=\"#addGradeModal\"></i>\r\n                    </span>\r\n                </div>  \r\n            </div>\r\n\r\n            <ModalDetailGrade informationsCameras={informationsCameras} colorModalDetails={colorModalDetails} titleModalDetails={titleModalDetails} \r\n                activateButton={activateButton} resetModal={resetModal} />           \r\n            <ModalAddGrade nameGrade={textNewNameGrade} borderGrade={borderNewNameGrade} colorGrade={finalColor} idColorGrade={finalIdColor} \r\n                colors={colorGrades} errorName={textErrorName} errorColor={textErrorColor} setNameGrade={setTextNewNameGrade} resetCreation={resetCreation} \r\n                createGrade={createGrade} chooseColor={chooseColor}/>\r\n            <ModalModifyGrade currentColor={currentColor} currentIdGrade={currentIdGrade} currentGrade={currentGrade} informationsCameras={informationsCameras} \r\n                saveAction={saveAction} newNotifications={newNotifications} newActions={newActions} activateButton={activateButton}/>\r\n            <ModalConfirmationCancel activateButton={activateButton} deleteModification={deleteModification} />\r\n\r\n            <ToastContainer style={{fontSize:\"0.6rem\"}}/>      \r\n        </div>\r\n    );\r\n  }\r\n  \r\n  export default Grades;\r\n","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\Login.js",["156","157","158"],"import 'bootstrap/dist/js/bootstrap.bundle.min.js';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport'bootstrap/dist/css/bootstrap.min.css';\r\nimport'bootstrap/dist/js/bootstrap.min.js';\r\nimport'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\nimport {useEffect, useState} from \"react\" ;\r\n\r\n\r\n\r\nfunction Login() {\r\n\tconst [username, setUsername] = useState('');\r\n\tconst [password, setPassword] = useState('');\r\n\tconst [state, setState] = useState(0);\r\n\r\n\tconst loginUser = () => {\r\n\t\tlet informations = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' }, \r\n\t\t\tbody: JSON.stringify({ username, password })\r\n        };\r\n        fetch(`/api/login`, informations)\r\n            .then(response => {\r\n\t\t\t\treturn response.json()\t\r\n\t\t\t}).then(token => {\r\n                console.log(token.value)\r\n                if (token.value) {\r\n                    localStorage.setItem('access_token', token.value);\r\n\r\n                    if (localStorage.getItem(\"access_token\") !== null && localStorage.getItem(\"access_token\") !== \"undefined\") {\r\n                        window.location.replace(\"/home\")\r\n                    }\r\n                }\r\n\r\n                \r\n\t\t\t})\r\n\t}\r\n\tconst handleSubmit = (e) => {\r\n\t\te.preventDefault()\r\n\t}\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\">\r\n            <form onSubmit={handleSubmit}>\r\n                \r\n                <div class=\"mb-3\">\r\n                    <label for=\"exampleInputEmail1\" class=\"form-label\">Nom d'utilisateuuuuuuuur</label>\r\n                    <input type=\"text\" placeholder='toto' value={username} onChange={(e) => setUsername(e.target.value)} class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"/>\r\n                </div>\r\n                <div class=\"mb-3\">\r\n                    <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\r\n                    <input type=\"password\" placeholder='' value={password} onChange={(e) => setPassword(e.target.value)} class=\"form-control\" id=\"exampleInputPassword1\"/>\r\n                </div>\r\n                \r\n                <button onClick={loginUser} class=\"btn btn-primary\">Connecter</button><br/>\r\n\r\n            </form>\r\n    \t</div>\r\n    \r\n        </>\r\n    )\r\n\r\n} export default Login;","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\Modification.js",["159","160","161","162","163","164","165","166","167"],"import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\"\r\nimport '../css/Modification.css'\r\nimport Popover from \"react-bootstrap/Popover\"\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport EdiText from \"react-editext\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const ImgContainer = styled.div`\r\n  width: 100px;\r\n  height: 100px;\r\n  overflow: hidden;\r\n  margin: 0px;\r\n  border-radius: 50%;\r\n  box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.1);\r\n\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n  }\r\n  \r\n`;\r\nconst optionsToast = {\r\n    autoClose: 4000,\r\n    position: \"bottom-right\",\r\n    hideProgressBar: false,\r\n    closeOnClick: true,\r\n    pauseOnHover: true,\r\n    draggable: true,\r\n    theme: \"colored\"\r\n};\r\n\r\nfunction Modification() {\r\n\r\n    const [editing, setEditing] = useState(false);\r\n    const [name, setName] = useState(\"\");\r\n    const [surname, setSurname] = useState(\"\");\r\n    var photos = []\r\n    const [call, setCall] = useState(\"\");\r\n    const [allPhotos, setAllPhotos] = useState([])\r\n    const [profilePhoto, setProfilePhoto] = useState(\"\")\r\n    const [hasValue, setHasValue] = useState(null)\r\n    const [count, setCount] = useState(null)\r\n    const [color, setColor] = useState(\"\")\r\n    const [nameGrade, setNameGrade] = useState(\"\")\r\n    const [valueGrade, setValueGrade] = useState(\"\")\r\n    const [etatModification, setEtatModification] = useState(0)\r\n    const [userNow, setUserNow] = useState(\"\")\r\n    const [allGrade, setAllGrade] = useState(null)\r\n\r\n    /**\r\n     * Change user's first and last name\r\n     * \r\n     * @author Ikram Jaujate <i.jaujateouldkhala@students.ephec.be>\r\n     * @param {string} member  Identifier of the member\r\n     */\r\n    const handleSave = (member) => {\r\n        let nameSurname = member.split(/(\\s+)/);\r\n        const result = nameSurname.filter(word => word.trim().length > 0);\r\n        let name = result[0]\r\n        let surname = result[1]\r\n\r\n        fetch(`/api/membres/${userNow}/update`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ name, surname })\r\n        }).then((response) => {\r\n            console.log(response)\r\n            if (response.status === 200) {\r\n                toast.success(\"Vous venez de modifier le nom et prénom de cet utilisateur\", optionsToast);\r\n            }\r\n            else {\r\n                toast.error(\"Une erreur s'est produite. Veuillez réessayer. Si l'erreur persite, contactez-nous\");\r\n            }\r\n\r\n        })\r\n\r\n\r\n    }\r\n    /**\r\n   * Retrieves the grade from a member\r\n   * \r\n   * @author Ikram Jaujate Ouldkhala <i.jaujateouldkhala@students.ephec.be>\r\n   * @method GET\r\n   * @param {integer} idMember identifier of the member for which we want to retrieve the grade\r\n   */\r\n\r\n    const gradeMembre = (userNow) => {\r\n        let informations = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n        };\r\n        fetch(`/api/membres/${userNow}/grade`, informations)\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                setNameGrade(response[0][\"name_grade\"])\r\n                setColor(response[0][\"color\"])\r\n                setValueGrade(response[\"id_grade\"])\r\n                //console.log(color, nameGrade, valueGrade)\r\n                setHasValue(true)\r\n\r\n            });\r\n\r\n    }\r\n\r\n    /**\r\n     * Recovers information about the different grades, such as their name, their associated color,\r\n     * as well as the number of authorized and refused cameras\r\n     *\r\n     * @author Clémentine Sacré <c.sacre@students.ephec.be>\r\n     * @method GET\r\n     */\r\n    const gradeAll = (userNow) => {\r\n        let informations = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n        };\r\n        fetch(`/api/grades`, informations)\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                setAllGrade(res)\r\n            });\r\n    }\r\n\r\n    const updatePhoto = () => {\r\n        let informations = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n        };\r\n        fetch(`/api/membres/${userNow}/photos`, informations)\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                let images = []\r\n                for (let i in res) {\r\n                    photos.push(res[i][\"pictures\"])\r\n                    setAllPhotos(photos)\r\n                    setProfilePhoto(res[0][\"pictures\"])\r\n                }\r\n\r\n                setProfilePhoto(photos[0])\r\n                setHasValue(true)\r\n            })\r\n\r\n    }\r\n\r\n    /**\r\n     * Get user's first and last name\r\n     * \r\n     * @author Ikram Jaujate <i.jaujateouldkhala@students.ephec.be>\r\n     * @param {string} member  Identifier of the member\r\n     */\r\n\r\n    const nomMembre = (userNow) => {\r\n        console.log(userNow)\r\n        let informations = {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n            },\r\n        };\r\n        fetch(`/api/membres/${userNow}`, informations)\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                let nom = response[0][\"first_name\"].replaceAll(\"\\\\s+\", \"\")\r\n                let surnom = response[0][\"last_name\"].replaceAll(\"\\\\s+\", \"\")\r\n                let text = nom.replace(/\\s+/g, '') + ' ' + surnom.replace(/\\s+/g, '');\r\n                text.replace(/\\s+/g, '');\r\n                setName(nom)\r\n                setSurname(surnom)\r\n                setCall(text)\r\n                setHasValue(true)\r\n            });\r\n\r\n    }\r\n\r\n    /**\r\n     * Gets the number of photos owned by this member\r\n     * \r\n     * @author Ikram Jaujate <i.jaujateouldkhala@students.ephec.be>\r\n     * @param {string} member  Identifier of the member\r\n     */\r\n    var listeGrade = {}\r\n\r\n    const modificationUp = () => {\r\n        setEtatModification(1)\r\n        allGrade.map(grade =>\r\n            listeGrade[grade.name_grade] = (grade.color).replace(/\\s+/g, '')\r\n        )\r\n        if (nameGrade in listeGrade) {\r\n            delete listeGrade[nameGrade]\r\n        }\r\n\r\n    }\r\n\r\n    /**\r\n     * Counts the number of photos owned by the member.\r\n     * \r\n     * @author Ikram Jaujate Ouldkhala <i.jaujateouldkhala@students.ephec.be>\r\n     * @method GET\r\n     * @param {integer} idMember identifier of the member for which we want to retrieve information\r\n     */\r\n\r\n    const countPhoto = (userNow) => {\r\n        let informations = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n        };\r\n        fetch(`/api/membres/${userNow}/photos/count`, informations)\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                setCount(response[0][\"count\"])\r\n                setHasValue(true)\r\n            });\r\n    }\r\n    /**\r\n    * Get user's pictures\r\n    * \r\n    * @author Ikram Jaujate <i.jaujateouldkhala@students.ephec.be>\r\n    * @param {string} member  Identifier of the member\r\n    */\r\n\r\n    const photoMembre = (userNow) => {\r\n        let informations = {\r\n            method: 'GET',\r\n            headers: { 'Content-Type': 'application/json' },\r\n        };\r\n        fetch(`/api/membres/${userNow}/photos`, informations)\r\n            .then(response => response.json())\r\n            .then(res => {\r\n                setAllPhotos(res)\r\n                for (let i in res) {\r\n                    photos.push(res[i][\"pictures\"])\r\n                    setProfilePhoto(res[0][\"pictures\"])\r\n                }\r\n                setHasValue(true)\r\n            })\r\n        setProfilePhoto(photos[0])\r\n\r\n    }\r\n\r\n\r\n    /**\r\n    * Eliminate picture of a member\r\n    * \r\n    * @author Ikram Jaujate Ouldkhala <i.jaujateouldkhala@students.ephec.be>\r\n    * @method DELETE\r\n    * @param {integer} idMember identifier of the member for which we want to eliminate photo\r\n    */\r\n\r\n    const eliminate = (photo) => {\r\n        console.log(photo)\r\n        fetch(`/api/membres/${userNow}/eliminate/photo`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ photo })\r\n        }).then((response) => {\r\n            console.log(response)\r\n            if (response.status === 200) {\r\n                toast.success(\"Vous venez d'effacer la photo\", optionsToast);\r\n                photoMembre(userNow)\r\n                countPhoto(userNow)\r\n            }\r\n            else {\r\n                toast.error(\"Une erreur s'est produite. Veuillez réessayer. Si l'erreur persite, contactez-nous\");\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n\r\n\r\n    const popover = (\r\n        <Popover id=\"popover-basic\">\r\n            <Popover.Body id=\"popover-test\">\r\n                <div class=\"row\">\r\n                    {allPhotos.map(photo =>\r\n                        <div class=\" test col\">\r\n                            <i class=\"bi bi-x-circle-fill pr-2 mb-3\" onClick={() => eliminate(photo.pictures)}></i>\r\n                            <img class=\"img-thumbnail h-50\" src={photo.pictures} alt='' />\r\n                        </div>)}\r\n                </div>\r\n            </Popover.Body>\r\n        </Popover>\r\n    );\r\n\r\n    const changeUser = async (id) => {\r\n        setUserNow(id);\r\n        nomMembre(id);\r\n        gradeMembre(id);\r\n        photoMembre(id);\r\n        countPhoto(id);\r\n        gradeAll(id)\r\n    }\r\n\r\n    const dimiss = () => {\r\n        window.location.href = '/modification'\r\n    }\r\n\r\n    /**\r\n    *  Change grade of a member\r\n    * \r\n    * @author Ikram Jaujate Ouldkhala <i.jaujateouldkhala@students.ephec.be>\r\n    * @method PUT\r\n    * @param {integer} idMember identifier of the member for which we want to change the grade\r\n    */\r\n    const modificationChoixGrade = (idGrade) => {\r\n        fetch(`/api/membres/${idGrade}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ userNow })\r\n        }).then((response) => {\r\n            console.log(response)\r\n            if (response.status === 200) {\r\n                toast.success(\"Vous venez de modifier le grade de l'utilisateur\", optionsToast);\r\n            }\r\n            else {\r\n                toast.error(\"Une erreur s'est produite. Veuillez réessayer. Si l'erreur persite, contactez-nous\");\r\n            }\r\n\r\n        })\r\n        changeUser(userNow)\r\n        setEtatModification(0)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ToastContainer style={{ fontSize: \"0.6rem\" }} />\r\n\r\n            <button type=\"button\" onClick={() => { changeUser(1); }} class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#staticBackdrop\">\r\n                User 1\r\n            </button>\r\n            <button type=\"button\" onClick={() => changeUser(2)} class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#staticBackdrop\">\r\n                User 2\r\n            </button>\r\n            <button type=\"button\" onClick={() => changeUser(3)} class=\"btn btn-primary\" data-bs-toggle=\"modal\" data-bs-target=\"#staticBackdrop\">\r\n                User 3\r\n            </button>\r\n\r\n            <div class=\"modal fade\" id=\"staticBackdrop\" data-bs-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\r\n                <div class=\"modal-dialog modal-dialog-centered\">\r\n\r\n                    <div class=\"modal-content\" style={{ backgroundColor: color }}>\r\n\r\n                        <div class=\"modal-body\">\r\n\r\n                            <div class=\"hovereffect\">\r\n\r\n                                <div class=\"row\">\r\n\r\n                                    <div class=\"col\">\r\n\r\n                                        <ImgContainer>\r\n                                            <img src={profilePhoto} alt='' />\r\n                                            <OverlayTrigger trigger=\"click\" placement=\"right\" overlay={popover}>\r\n                                                <span className=\"badge nineplus\" >{count}</span>\r\n                                            </OverlayTrigger>\r\n\r\n                                        </ImgContainer>\r\n\r\n                                    </div>\r\n                                    <div class=\"col\">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div class=\"tool\">\r\n                                {etatModification === 0 ? <p class=\"affiche\"> {nameGrade.toUpperCase()} <i onClick={modificationUp} className=\"bi bi-pencil-square\" style={{ color: 'white', 'background': color, \"backgroundSize\": \"10px\", fontSize: \"80%\", \"textAlign\": \"right\", \"paddingRight\": '10px ', \"paddingLeft\": \"4px\" }}></i></p>\r\n                                    : allGrade.map(grade => (grade.name_grade !== nameGrade ?\r\n                                        <i key={grade.name_grade} onClick={() => { modificationChoixGrade(grade.id_grade); }} className=\"bi bi-person-square\" style={{ color: grade.color, \"border\": \"10px black\", \"fontSize\" : \"100%\",'background': color, \"textAlign\": \"right\", \"paddingRight\": \"20px\" }}></i> : ''))\r\n                                }\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div class=\"col-12\">\r\n\r\n                            <EdiText\r\n                                value={call}\r\n                                type=\"text\"\r\n                                onSave={handleSave}\r\n                                editing={editing}\r\n                                buttonsAlign='before'\r\n                            />\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        </>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default Modification;","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\Camera.js",["168","169","170"],"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\nimport { useEffect, useState } from \"react\";\r\nimport { ToastContainer, toast, Zoom } from 'react-toastify';\r\n\r\nimport '../css/Camera.css';\r\nfunction Camera() {\r\n    const [etat, setEtat] = useState(\"http://0.0.0.0:6060/video\")\r\n    const [statusCam, setStatusCam] = useState(false);\r\n    const [cameras, setCameras] = useState(null);\r\n    const [screenshoot, setScreenshoot] = useState(null);\r\n\r\n\r\n    const optionsToast = {\r\n        autoClose: 5000,\r\n        position: \"bottom-right\",\r\n        hideProgressBar: false,\r\n        closeOnClick: false,\r\n        pauseOnHover: true,\r\n        draggable: true,\r\n        theme: \"colored\"\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n\r\n        fetch(\"/api/cameras\", {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*'\r\n            },\r\n            mode: 'no-cors'\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                setCameras(data);\r\n            })\r\n    }, []);\r\n\r\n    function Allumer() {\r\n        console.log(\"up\")\r\n        fetch(\"http://0.0.0.0:6060/up\", {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*'\r\n            },\r\n            mode: 'no-cors'\r\n        }).then(res => res.json).then(data => {\r\n            setEtat(\"http://0.0.0.0:6060/video\")\r\n        })\r\n    }\r\n\r\n    function Capture() {\r\n        //event.preventDefault()\r\n        console.log(\"capture\")\r\n        fetch(\"http://0.0.0.0:6060/photo\", {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*'\r\n            },\r\n            mode: 'no-cors'\r\n        })\r\n            .then(res => res.json)\r\n            .then(data => {\r\n                fetch(\"/api/pictureScreenshoot\", {\r\n                    method: 'GET',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                }).then(res => res.json())\r\n                    .then(data => {\r\n                        setScreenshoot(data.picture)\r\n                        const ScreenshotToast = () => (\r\n                            <div >\r\n                                <img class=\"layout-screenshot\" data-bs-toggle=\"modal\" data-bs-target=\"#openscreenshotmodal\" src={`image-client/${data.picture}`} alt=\"video surveillance\" width=\"100\" height=\"auto\" />\r\n                            </div>\r\n                        )\r\n                        toast.info(<ScreenshotToast />, optionsToast);\r\n                    })\r\n            })\r\n\r\n    }\r\n\r\n    function Eteindre() {\r\n        console.log(\"éteindre\")\r\n        fetch(\"http://0.0.0.0:6060/shutdown\", {\r\n            headers: {\r\n                'Access-Control-Allow-Origin': '*'\r\n            },\r\n            mode: 'no-cors'\r\n        }).then(res => res.json).then(data => {\r\n            setEtat('camera-disconnected.png')\r\n        })\r\n    }\r\n\r\n    function changeStatusCam(identifiant) {\r\n        let statut = document.getElementById(identifiant).checked\r\n        if (statut) {\r\n            Allumer();\r\n        }\r\n        else {\r\n            Eteindre();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n\r\n            <div class=\"row align-items-center\">\r\n                <div class=\"m-auto px-2\">\r\n                    <h1>test</h1>\r\n                    <section class=\"streaming\">\r\n                        <h3>Camera</h3>\r\n                        <div id=\"changement\">\r\n                            <img id=\"test\" alt=\"video surveillance\" src={etat} width=\"640\" height=\"480\" />\r\n                        </div>\r\n                    </section>\r\n\r\n                    <button class=\"btn btn-primary m-5\" type=\"button\" onClick={Capture}>prend photo</button>\r\n                    <button class=\"btn btn-primary m-5\" onClick={Allumer} type=\"button\" name=\"start\" value=\"Eteindre\">up</button>\r\n                    <button class=\"btn btn-primary m-5\" onClick={Eteindre} type=\"button\" name=\"stop\" value=\"Eteindre\">Éteindre</button>\r\n\r\n                    {cameras && cameras.map(camera =>\r\n                        <div class=\"form-check form-switch\">\r\n                            {camera.name_status === 'ON' ? <input class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id={camera.id_camera} defaultChecked onClick={() => changeStatusCam(camera.id_camera)} /> :\r\n                                camera.name_status === 'OFF' ? <input class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id={camera.id_camera} onClick={() => changeStatusCam(camera.id_camera)} /> :\r\n                                    <input class=\"form-check-input\" type=\"checkbox\" role=\"switch\" id={camera.id_camera} disabled />}\r\n                            <label class=\"form-check-label\" for={camera.id_camera}>{camera.name_camera}</label>\r\n                        </div>\r\n                    )}\r\n\r\n                </div >\r\n            </div>\r\n            <ToastContainer style={{ fontSize: \"0.6rem\" }} />\r\n            <div id=\"openscreenshotmodal\" className=\"modal fade\" data-bs-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"gradeModalLabel\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog modal-xl modal-dialog-centered modal-dialog-scrollable\">\r\n                    <div className=\"modal-content\">\r\n\r\n                        <div className=\"modal-body\">\r\n                            <img class=\"modal-screenshot\" src={`image-client/${screenshoot}`} alt=\"video surveillance\" width=\"100%\" height=\"100%\" />\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default Camera;","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\File-upload.js",["171","172"],"import React, { Component } from \"react\";\r\nimport UploadService from \"../services/files-upload.service\";\r\n\r\nexport default class UploadFiles extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.selectFiles = this.selectFiles.bind(this);\r\n    this.upload = this.upload.bind(this);\r\n    this.uploadFiles = this.uploadFiles.bind(this);\r\n    this.previewImages= [];\r\n\r\n    this.state = {\r\n      selectedFiles: undefined,\r\n      progressInfos: [],\r\n      message: [],\r\n\r\n      fileInfos: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UploadService.getFiles().then((response) => {\r\n      this.setState({\r\n        fileInfos: response.data,\r\n      });\r\n    });\r\n  }\r\n\r\n  selectFiles(event) {\r\n    this.setState({\r\n      progressInfos: [],\r\n      selectedFiles: event.target.files,\r\n    });\r\n  }\r\n\r\n  upload(idx, file) {\r\n    let _progressInfos = [...this.state.progressInfos];\r\n\r\n    UploadService.upload(file, (event) => {\r\n      _progressInfos[idx].percentage = Math.round((100 * event.loaded) / event.total);\r\n      this.setState({\r\n        _progressInfos,\r\n      });\r\n    })\r\n      .then((response) => {\r\n        this.setState((prev) => {\r\n          let nextMessage = [...prev.message, \"Uploaded the file successfully: \" + file.name];\r\n          return {\r\n            message: nextMessage\r\n          };\r\n        });\r\n\r\n        return UploadService.getFiles();\r\n      })\r\n      .then((files) => {\r\n        this.setState({\r\n          fileInfos: files.data,\r\n        });\r\n      })\r\n      .catch(() => {\r\n        _progressInfos[idx].percentage = 0;\r\n        this.setState((prev) => {\r\n          let nextMessage = [...prev.message, \"Could not upload the file: \" + file.name];\r\n          return {\r\n            progressInfos: _progressInfos,\r\n            message: nextMessage\r\n          };\r\n        });\r\n      });\r\n  }\r\n\r\n  uploadFiles(event) {\r\n    event.preventDefault();\r\n    const selectedFiles = this.state.selectedFiles;\r\n\r\n    let _progressInfos = [];\r\n\r\n    for (let i = 0; i < selectedFiles.length; i++) {\r\n      _progressInfos.push({ percentage: 0, fileName: selectedFiles[i].name });\r\n    }\r\n\r\n    this.setState(\r\n      {\r\n        progressInfos: _progressInfos,\r\n        message: [],\r\n      },\r\n      () => {\r\n        for (let i = 0; i < selectedFiles.length; i++) {\r\n          this.upload(i, selectedFiles[i]);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { selectedFiles, previewImages, progressInfos, message, fileInfos } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        {progressInfos &&\r\n          progressInfos.map((progressInfo, index) => (\r\n            <div className=\"mb-2\" key={index}>\r\n              <span>{progressInfo.fileName}</span>\r\n              <div className=\"progress\">\r\n                <div\r\n                  className=\"progress-bar progress-bar-info\"\r\n                  role=\"progressbar\"\r\n                  aria-valuenow={progressInfo.percentage}\r\n                  aria-valuemin=\"0\"\r\n                  aria-valuemax=\"100\"\r\n                  style={{ width: progressInfo.percentage + \"%\" }}\r\n                >\r\n                  {progressInfo.percentage}%\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n\r\n         {/* {previewImages && (\r\n          <div>\r\n            {previewImages.map((img, i) => {\r\n              return <img className=\"preview\" src={img} alt={\"image-\" + i}  key={i}/>;\r\n            })}\r\n          </div>\r\n          )} */}\r\n\r\n        <div className=\"row my-3\">\r\n          <div className=\"col-8\">\r\n            <label className=\"btn btn-default p-0\">\r\n              <input type=\"file\" multiple onChange={this.selectFiles} />\r\n            </label>\r\n          </div>\r\n\r\n          <div className=\"col-4\">\r\n            <button\r\n              className=\"btn btn-success btn-sm\"\r\n              disabled={!selectedFiles}\r\n              onClick={this.uploadFiles}\r\n              type=\"submit\"\r\n            >\r\n              Enregistrer\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {message.length > 0 && (\r\n          <div className=\"alert alert-secondary\" role=\"alert\">\r\n            <ul>\r\n              {message.map((item, i) => {\r\n                return <li key={i}>{item}</li>;\r\n              })}\r\n            </ul>\r\n          </div>\r\n        )}\r\n\r\n        {/*<div className=\"card\">\r\n          <div className=\"card-header\">List of Files</div>\r\n          <ul className=\"list-group list-group-flush\">\r\n            {fileInfos &&\r\n              fileInfos.map((file, index) => (\r\n                <li className=\"list-group-item\" key={index}>\r\n                  <a href={file.url}>{file.name}</a>\r\n                  <img src={file.url} alt={file.name} height=\"80px\" />\r\n                </li>\r\n              ))}\r\n          </ul>\r\n              </div>*/}\r\n      </div>\r\n    );\r\n  }\r\n}","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\OngletCamera.js",["173"]," import '../css/OngletCamera.css';\r\n \r\n import ToggleSwitch from \"../components/ToggleSwitch.js\";\r\n import Live from \"../components/Live\";\r\n import React from 'react';\r\n\r\nfunction CadreCameras ({idCam,nomCam, statusCam, nomStatus}){\r\n      \r\n    return ( \r\n       <div>\r\n            {statusCam ===1 ?\r\n                <div  data-bs-toggle=\"tooltip\" data-bs-placement=\"top\" title=\"Cliquez pour visionner le live\" className={`row col-11 col-sm-9 col-md-7 col-lg-8 offset-sm-3 offset-md-4 offset-1 offset-lg-3 cadreBouton ${nomStatus}`} data-bs-toggle=\"modal\" data-bs-target='#ModalTarget'>\r\n                    <div className=\"col-1 col-md-1 col-sm-2\"><i class=\"bi bi-camera-video\"></i></div>\r\n                    <div className=\"col-3 col-sm-2 col-md-2 offset\">{nomCam}</div>\r\n                    <ToggleSwitch nom={nomCam} status={statusCam} id = {idCam}/>\r\n                    <Live idName={nomStatus}/>\r\n                </div> \r\n            : <div  className={`row col-11 col-sm-9 col-md-7 col-lg-8 offset-sm-3 offset-md-4 offset-1 offset-lg-3 cadreBouton ${nomStatus}`}>  \r\n                <div className=\"col-1 col-md-1 col-sm-2\"><i class=\"bi bi-camera-video-off\"></i></div>\r\n                <div className=\"col-3 col-sm-2 col-md-2 offset\">{nomCam}</div>\r\n                <ToggleSwitch nom={nomCam} status={statusCam} id = {idCam}/>\r\n                </div>\r\n            }    \r\n        </div> \r\n    )\r\n }\r\n export default CadreCameras; ","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\Input.js",[],"C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\ToggleSwitch.js",[],"C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\LayoutGrade.js",[],"C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\ElementNavbar.js",[],"C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\ModalAddGrade.js",[],"C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\ModalConfirmationCancel.js",[],"C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\ModalModifyGrade.js",[],"C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\ModalDetailGrade.js",[],"C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\services\\files-upload.service.js",[],"C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\Live.js",["174","175","176","177","178"],"\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min.js';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport'bootstrap/dist/css/bootstrap.min.css';\r\nimport'bootstrap/dist/js/bootstrap.min.js';\r\nimport'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport 'bootstrap-icons/font/bootstrap-icons.css';\r\nimport { Popover, Toast, Tooltip } from 'bootstrap/dist/js/bootstrap.esm.min.js' ;\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nfunction Live(){\r\n  \r\n  \r\n\r\nreturn(\r\n    <div class=\"modal fade\" id=\"ModalTarget\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabindex=\"-1\" aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\r\n      <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n          <div class=\"modal-header\">\r\n            <h5 style={{'color':'grey'}} class=\"modal-title\" id=\"staticBackdropLabel\">__Live__</h5>\r\n            <button type=\"button\" class=\" btn-secondary btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n          </div>\r\n          <div class=\"modal-body\">\r\n            <img className=\"img-thumbnail\" alt='visu_live'src= \"http://0.0.0.0:6060/video\" width=\"440\" height=\"300\" title=\"Foscam FI8905W\" />\r\n          </div>\r\n          <div class=\"modal-footer justify-content-center\">\r\n            <button type=\"button\" className=\" col-3 btn btn-secondary\"><i className=\"bi bi-camera-reels\"></i></button>\r\n            <button type=\"button\" className=\" col-3 btn btn-secondary\"><i className=\"bi bi-camera\"></i></button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n)}\r\nexport default Live; ","C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\CameraInfo.js",[],"C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\TitleModalGrade.js",[],"C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\ActionsCameras.js",[],"C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\http-common.js",[],"C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\GDPR.js",["179"],"C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\ButtonGrade.js",[],"C:\\Users\\bonne\\Desktop\\Projet d'intégration\\ProjetIntegration\\frontend\\src\\components\\Droit_GDPR.js",["180","181","182","183"],{"ruleId":"184","replacedBy":"185"},{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","severity":1,"message":"189","line":8,"column":49,"nodeType":"190","messageId":"191","endLine":8,"endColumn":53},{"ruleId":"188","severity":1,"message":"192","line":14,"column":10,"nodeType":"190","messageId":"191","endLine":14,"endColumn":17},{"ruleId":"188","severity":1,"message":"193","line":14,"column":19,"nodeType":"190","messageId":"191","endLine":14,"endColumn":24},{"ruleId":"188","severity":1,"message":"194","line":14,"column":26,"nodeType":"190","messageId":"191","endLine":14,"endColumn":33},{"ruleId":"188","severity":1,"message":"195","line":15,"column":10,"nodeType":"190","messageId":"191","endLine":15,"endColumn":24},{"ruleId":"188","severity":1,"message":"196","line":15,"column":26,"nodeType":"190","messageId":"191","endLine":15,"endColumn":31},{"ruleId":"188","severity":1,"message":"197","line":3,"column":9,"nodeType":"190","messageId":"191","endLine":3,"endColumn":18},{"ruleId":"188","severity":1,"message":"198","line":3,"column":20,"nodeType":"190","messageId":"191","endLine":3,"endColumn":28},{"ruleId":"188","severity":1,"message":"199","line":25,"column":12,"nodeType":"190","messageId":"191","endLine":25,"endColumn":25},{"ruleId":"188","severity":1,"message":"200","line":68,"column":11,"nodeType":"190","messageId":"191","endLine":68,"endColumn":21},{"ruleId":"201","severity":1,"message":"202","line":310,"column":19,"nodeType":"203","messageId":"204","endLine":318,"endColumn":14},{"ruleId":"201","severity":1,"message":"205","line":331,"column":19,"nodeType":"203","messageId":"204","endLine":339,"endColumn":14},{"ruleId":"188","severity":1,"message":"197","line":7,"column":9,"nodeType":"190","messageId":"191","endLine":7,"endColumn":18},{"ruleId":"188","severity":1,"message":"206","line":14,"column":9,"nodeType":"190","messageId":"191","endLine":14,"endColumn":14},{"ruleId":"188","severity":1,"message":"207","line":14,"column":16,"nodeType":"190","messageId":"191","endLine":14,"endColumn":24},{"ruleId":"188","severity":1,"message":"197","line":4,"column":27,"nodeType":"190","messageId":"191","endLine":4,"endColumn":36},{"ruleId":"188","severity":1,"message":"208","line":40,"column":21,"nodeType":"190","messageId":"191","endLine":40,"endColumn":31},{"ruleId":"188","severity":1,"message":"209","line":41,"column":12,"nodeType":"190","messageId":"191","endLine":41,"endColumn":16},{"ruleId":"188","severity":1,"message":"210","line":42,"column":12,"nodeType":"190","messageId":"191","endLine":42,"endColumn":19},{"ruleId":"188","severity":1,"message":"211","line":47,"column":12,"nodeType":"190","messageId":"191","endLine":47,"endColumn":20},{"ruleId":"188","severity":1,"message":"212","line":51,"column":12,"nodeType":"190","messageId":"191","endLine":51,"endColumn":22},{"ruleId":"188","severity":1,"message":"213","line":132,"column":11,"nodeType":"190","messageId":"191","endLine":132,"endColumn":22},{"ruleId":"188","severity":1,"message":"214","line":140,"column":21,"nodeType":"190","messageId":"191","endLine":140,"endColumn":27},{"ruleId":"188","severity":1,"message":"215","line":305,"column":11,"nodeType":"190","messageId":"191","endLine":305,"endColumn":17},{"ruleId":"188","severity":1,"message":"216","line":6,"column":33,"nodeType":"190","messageId":"191","endLine":6,"endColumn":37},{"ruleId":"188","severity":1,"message":"217","line":11,"column":12,"nodeType":"190","messageId":"191","endLine":11,"endColumn":21},{"ruleId":"188","severity":1,"message":"218","line":11,"column":23,"nodeType":"190","messageId":"191","endLine":11,"endColumn":35},{"ruleId":"188","severity":1,"message":"219","line":96,"column":28,"nodeType":"190","messageId":"191","endLine":96,"endColumn":41},{"ruleId":"188","severity":1,"message":"220","line":96,"column":67,"nodeType":"190","messageId":"191","endLine":96,"endColumn":76},{"ruleId":"221","severity":1,"message":"222","line":12,"column":233,"nodeType":"223","messageId":"224","endLine":12,"endColumn":255},{"ruleId":"188","severity":1,"message":"192","line":8,"column":10,"nodeType":"190","messageId":"191","endLine":8,"endColumn":17},{"ruleId":"188","severity":1,"message":"193","line":8,"column":19,"nodeType":"190","messageId":"191","endLine":8,"endColumn":24},{"ruleId":"188","severity":1,"message":"194","line":8,"column":26,"nodeType":"190","messageId":"191","endLine":8,"endColumn":33},{"ruleId":"188","severity":1,"message":"195","line":9,"column":10,"nodeType":"190","messageId":"191","endLine":9,"endColumn":24},{"ruleId":"188","severity":1,"message":"196","line":9,"column":26,"nodeType":"190","messageId":"191","endLine":9,"endColumn":31},{"ruleId":"225","severity":1,"message":"226","line":7,"column":9,"nodeType":"227","messageId":"228","endLine":7,"endColumn":22},{"ruleId":"229","severity":1,"message":"230","line":7,"column":13,"nodeType":"227","endLine":7,"endColumn":63},{"ruleId":"229","severity":1,"message":"230","line":12,"column":21,"nodeType":"227","endLine":12,"endColumn":128},{"ruleId":"229","severity":1,"message":"230","line":30,"column":21,"nodeType":"227","endLine":30,"endColumn":128},{"ruleId":"229","severity":1,"message":"230","line":32,"column":29,"nodeType":"227","endLine":32,"endColumn":63},"no-native-reassign",["231"],"no-negated-in-lhs",["232"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Popover' is defined but never used.","'Toast' is defined but never used.","'Tooltip' is defined but never used.","'ToastContainer' is defined but never used.","'toast' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'currentMember' is assigned a value but never used.","'setCurrent' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'actionsModify'.","ArrowFunctionExpression","unsafeRefs","Function declared in a loop contains unsafe references to variable(s) 'notificationsModify'.","'state' is assigned a value but never used.","'setState' is assigned a value but never used.","'setEditing' is assigned a value but never used.","'name' is assigned a value but never used.","'surname' is assigned a value but never used.","'hasValue' is assigned a value but never used.","'valueGrade' is assigned a value but never used.","'updatePhoto' is assigned a value but never used.","'images' is assigned a value but never used.","'dimiss' is assigned a value but never used.","'Zoom' is defined but never used.","'statusCam' is assigned a value but never used.","'setStatusCam' is assigned a value but never used.","'previewImages' is assigned a value but never used.","'fileInfos' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","react/jsx-pascal-case","Imported JSX component Droit_GDPR must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]